#https://www.docker.com/blog/docker-github-actions/
#https://stackoverflow.com/questions/60735334/github-continuous-integration-cmake-c
#https://dev.to/mihinduranasinghe/using-docker-containers-in-jobs-github-actions-3eof

name: BuildGoogleTest

on: 
  push:
#    tags:
#    - "v*.*.*"
    
  pull_request:
  
jobs:
  build-googletest:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest
    strategy:
      matrix:
        BUILD_TYPE: [Debug] #, Release]
        #container: ['debian:stretch']  
        
    env:
      BUILD_TYPE: ${{matrix.BUILD_TYPE}}
      ARTIFACT: DESKTOP_LINUX64@GTest@1.8.0.5dadbab@GNU_6.3.0 #D:\repo\DESKTOP_WIN64\GTest\1.8.0.5dadbab\MSVC_19.28.29336.0
       #container: ${{matrix.container}}  
        
    container:
      image: onbings/debian_stretch_builder:latest
      #options: -v /__w/actions-test-repo/actions-test-repo:/zap/wrk/:rw
      options: -v "/home/runner/work/googletest/googletest":"/github/workspace"
      credentials:
        username: ${{secrets.DOCKER_HUB_USERNAME}}
        password: ${{secrets.DOCKER_HUB_ACCESS_TOKEN}}
        
    steps:
    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: cmake -E make_directory ${{github.workspace}}/build/$BUILD_TYPE
          # cmake -E make_directory ${{github.workspace}}/build/$BUILD_TYPE/install
    
    - name: Checkout googletest source
      uses: actions/checkout@v2 
        
    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE
        
    - name: Build
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: cmake --build . --config $BUILD_TYPE

    - name: Test
      shell: bash
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C $BUILD_TYPE
      
    - name: Setup tmate session #https://github.com/mxschmitt/action-tmate
      uses: mxschmitt/action-tmate@v3
      with:
        sudo: false
        
    - name: Debug Docker with a multiline script
      run: |
        pwd
        ls -al /github
        uname -a
        ls -al /github/workspace
        uname -a
        ls -al /github/workspace/googletest
        uname -a
        ls -al /github/workspace/googletest/build
        uname -a
        ls -al /github/workspace/googletest/build/Debug
        uname -a
        
    - name: Install
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: cmake --install --config $BUILD_TYPE --prefix /github/workspace/googletest/build/Debug/install /github/workspace #${{env.BUILD_ROOT_DIR}}/build/install    

    - name: Debug Docker with a multiline script
      run: |
        pwd
        ls -al /home/runner/work/googletest/googletest/build/Debug/install
        uname -a
        
    - name: Upload Artifact on GitHub
      uses: actions/upload-artifact@v2
      with: 
          name: ${{env.ARTIFACT}}
          path: build/install
